(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{250:function(s,t,a){"use strict";a.r(t);var e=a(0),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"二、原始类型和引用对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、原始类型和引用对象"}},[s._v("#")]),s._v(" 二、原始类型和引用对象")]),s._v(" "),a("h2",{attrs:{id:"（一）类型的概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#（一）类型的概念"}},[s._v("#")]),s._v(" （一）类型的概念")]),s._v(" "),a("h3",{attrs:{id:"_1-原始类型和引用类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-原始类型和引用类型"}},[s._v("#")]),s._v(" 1 原始类型和引用类型")]),s._v(" "),a("p",[s._v("JS 虽然没有类的概念（ES6 后有 class 语法糖），但仍然有两种类型：")]),s._v(" "),a("ul",[a("li",[s._v("原始类型：保存为简单的数据值")]),s._v(" "),a("li",[s._v("引用类型：保存为对象，本质是指向内存位置的地址引用")])]),s._v(" "),a("h3",{attrs:{id:"_2-对比其他语言的类型处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-对比其他语言的类型处理"}},[s._v("#")]),s._v(" 2 对比其他语言的类型处理")]),s._v(" "),a("p",[s._v("其他编程语言用不同的数据结构来储存这2个不同的类型")]),s._v(" "),a("ul",[a("li",[s._v("栈：存原始类型")]),s._v(" "),a("li",[s._v("堆：存引用类型")])]),s._v(" "),a("p",[s._v("而 JS 使用一个变量对象追踪变量的生存期。")]),s._v(" "),a("ul",[a("li",[s._v("原始值：直接保存在变量对象内")]),s._v(" "),a("li",[s._v("引用值：作为指针保存在变量对象内，该指针指向内存中的实际存储位置")])]),s._v(" "),a("h2",{attrs:{id:"（二）原始类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#（二）原始类型"}},[s._v("#")]),s._v(" （二）原始类型")]),s._v(" "),a("h3",{attrs:{id:"_1-字面量和变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-字面量和变量"}},[s._v("#")]),s._v(" 1 字面量和变量")]),s._v(" "),a("p",[s._v("JS 有 6 种原始类型，都有自己的字面量形式")]),s._v(" "),a("ul",[a("li",[s._v("boolean：布尔值 true 或 false")]),s._v(" "),a("li",[s._v("number：任何整型或浮点数值\n"),a("ul",[a("li",[s._v("如 11.2； 100")])])]),s._v(" "),a("li",[s._v("string：单引号或双引号的任意个数字符（不区分字符类型）\n"),a("ul",[a("li",[s._v("如 \"xx\"；'xxx'")])])]),s._v(" "),a("li",[s._v("null：空类型。只有一个 null 值")]),s._v(" "),a("li",[s._v("undefined：未定义。只有一个值 undefined （会给到未初始化的变量上）")]),s._v(" "),a("li",[s._v("symbol (ES6 新增)")])]),s._v(" "),a("p",[s._v("大多数语言包括 JS ，用变量保存字面量时，都是直接保存值（而不是保存指向对象的指针地址）。")]),s._v(" "),a("p",[s._v("所以简单类型赋值给变量后，再次赋值给其他变量，这两个变量的存储地址是不同的。")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'xxx'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" str2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" str1\n")])])]),a("h3",{attrs:{id:"_2-用-typeof-鉴别原始类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-用-typeof-鉴别原始类型"}},[s._v("#")]),s._v(" 2 用 typeof 鉴别原始类型")]),s._v(" "),a("p",[s._v("对于以下四种类型能够准确判断")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "number"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'lucas'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "string"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("undefined")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "undefined"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "boolean"')]),s._v("\n")])])]),a("p",[s._v("对于 null 类型，结果是返回一个对象类型。")]),s._v(" "),a("blockquote",[a("p",[s._v("这被 TC39 （JS设计维护委员会）认定是一个错误。")])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "object", Null 会被判断成 object')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 最好的方式：用值直接与 null 进行比较看是否是空类型")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 注意是 ===")]),s._v("\nvalue "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true or false")]),s._v("\n")])])]),a("h3",{attrs:{id:"_3-原始类型的方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-原始类型的方法"}},[s._v("#")]),s._v(" 3 原始类型的方法")]),s._v(" "),a("p",[s._v("三个原始类型 string, number, boolean 都可以用 "),a("code",[s._v(".")]),s._v(" 的方式使用方法。")]),s._v(" "),a("p",[s._v("在体验上感觉像是调用对象的方法，实际上他们不是对象。")]),s._v(" "),a("p",[s._v("这是设计者故意设计成这样的，让我们有一致的语言使用体验。")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" lowercaseNmae "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Nich'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("toLowerCase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("h2",{attrs:{id:"（三）引用类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#（三）引用类型"}},[s._v("#")]),s._v(" （三）引用类型")]),s._v(" "),a("h3",{attrs:{id:"_1-引用类型基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-引用类型基本概念"}},[s._v("#")]),s._v(" 1 引用类型基本概念")]),s._v(" "),a("ul",[a("li",[s._v("引用类型就是 JS 中的对象，也是最接近类的东西")]),s._v(" "),a("li",[s._v("对象是属性的无序列表，属性包含键（始终是字符串）值对")]),s._v(" "),a("li",[s._v("若属性的值是函数，则它是一个方法")]),s._v(" "),a("li",[s._v("使用对象前，首先得创建")])]),s._v(" "),a("p",[s._v("在 JS 中，引用类型主要有3个")]),s._v(" "),a("ul",[a("li",[s._v("对象")]),s._v(" "),a("li",[s._v("数组")]),s._v(" "),a("li",[s._v("函数")])]),s._v(" "),a("h4",{attrs:{id:"_1）内建对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1）内建对象"}},[s._v("#")]),s._v(" 1）内建对象")]),s._v(" "),a("p",[s._v("就是可以通过 "),a("code",[s._v("new xx")]),s._v("方式实例化的对象")]),s._v(" "),a("ul",[a("li",[s._v("Array 数组类型个")]),s._v(" "),a("li",[s._v("Date")]),s._v(" "),a("li",[s._v("Error 运行期错误类型（还有一些子类型）")]),s._v(" "),a("li",[s._v("Function")]),s._v(" "),a("li",[s._v("Object")]),s._v(" "),a("li",[s._v("RegExp 正则表达式对象")])]),s._v(" "),a("h3",{attrs:{id:"_2-对象的创建和删除"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-对象的创建和删除"}},[s._v("#")]),s._v(" 2 对象的创建和删除")]),s._v(" "),a("h4",{attrs:{id:"_1）创建对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1）创建对象"}},[s._v("#")]),s._v(" 1）创建对象")]),s._v(" "),a("p",[s._v("使用 "),a("code",[s._v("new")]),s._v(" 操作符来实例化对象。")]),s._v(" "),a("p",[s._v("在 JS 中，构造函数就是通过 new 来创建对象的函数。任何函数都可以是构造函数，只是在命名上，大家约定首字母大写的为构造函数。")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 被创建的 obj 实例，是一个指针地址")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这种方式也可以")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" obj2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" obj "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// obj2 与 obj 是同一个指针地址，所以指向同一个对象")]),s._v("\n")])])]),a("h4",{attrs:{id:"_2）释放内存（解除对象引用）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2）释放内存（解除对象引用）"}},[s._v("#")]),s._v(" 2）释放内存（解除对象引用）")]),s._v(" "),a("p",[s._v("JS 自带垃圾回收机制（垃圾收集器自动对引用类型进行内存的优化）。")]),s._v(" "),a("p",[s._v("也可以手动清除，那就是让对象变量置为 "),a("code",[s._v("null")]),s._v("。这对于大型程序来说很有必要。节省内存的开销。")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nobj "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v("\n")])])]),a("h4",{attrs:{id:"_3）增删对象属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3）增删对象属性"}},[s._v("#")]),s._v(" 3）增删对象属性")]),s._v(" "),a("p",[s._v("JS 对象的一个特性，可以随时修改对象，及时开始没有定义他们。")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 可以增加属性")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("delete")]),s._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("x "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 删除属性")]),s._v("\n")])])]),a("h3",{attrs:{id:"_3-对象实例化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-对象实例化"}},[s._v("#")]),s._v(" 3 对象实例化")]),s._v(" "),a("p",[s._v("直接用字面量的形式创建，可以省略 new 的操作。")]),s._v(" "),a("p",[s._v("这里以对象为例，其他类型的引用对象都是类似的实例化方式")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 对象")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 对象的属性名字是标识符或者字符串")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 当属性名字中有特殊字符串时就可以用字符串的形式")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'wjy'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a-g-e"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 可以随时创建")]),s._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("grade "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("\n")])])]),a("h3",{attrs:{id:"_4-访问属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-访问属性"}},[s._v("#")]),s._v(" 4 访问属性")]),s._v(" "),a("p",[s._v("访问对象属性有两种方式")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'push'")]),s._v("\n\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// . 号")]),s._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'push'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 中括号")]),s._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 动态属性，也就是对应变量 b 的值。这里就是调用了 obj.push(123)")]),s._v("\n")])])]),a("h3",{attrs:{id:"_5-鉴别引用类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-鉴别引用类型"}},[s._v("#")]),s._v(" 5 鉴别引用类型")]),s._v(" "),a("h4",{attrs:{id:"_1）用-typeof-鉴别-function"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1）用-typeof-鉴别-function"}},[s._v("#")]),s._v(" 1）用 typeof 鉴别 function")]),s._v(" "),a("p",[s._v("在 JS 的几个引用类型中， 使用"),a("code",[s._v("typeof")]),s._v("仅可以鉴别 "),a("code",[s._v("Function")]),s._v(" 类型的对象。其他对象都是返回 "),a("code",[s._v("object")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function fn(){}\ntypeof fn // 'function'\n")])])]),a("h4",{attrs:{id:"_2）用-instanceof-鉴别其他对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2）用-instanceof-鉴别其他对象"}},[s._v("#")]),s._v(" 2）用 instanceof 鉴别其他对象")]),s._v(" "),a("blockquote",[a("p",[s._v("参数是对象和构造函数，用于判断该对象是否是该构造函数的一个实例")])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\narr "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("instanceof")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Array")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\nobj "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("instanceof")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\nfn "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("instanceof")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n")])])]),a("p",[s._v("这个操作符也是用于鉴别继承类型的，由于所有的引用类型都是继承自 Object，所以")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\narr instancof Object "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n")])])]),a("h4",{attrs:{id:"_3）用-isarray-鉴别数组对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3）用-isarray-鉴别数组对象"}},[s._v("#")]),s._v(" 3）用 isArray 鉴别数组对象")]),s._v(" "),a("p",[s._v("用 "),a("code",[s._v("isArray")]),s._v(" 的原因是，在 ES5 被提出：当网页存在多个框架时（多个全局环境），那么实例化数组的 Array 构造函数是有多个的。此时用 "),a("code",[s._v("instanceof")]),s._v("无法判断数组。")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("let arr = []\nArray.isArray(arr) // true\n")])])]),a("h3",{attrs:{id:"_6-原始封装类型（包装对象）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-原始封装类型（包装对象）"}},[s._v("#")]),s._v(" 6 原始封装类型（包装对象）")]),s._v(" "),a("h4",{attrs:{id:"_1）自动打包过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1）自动打包过程"}},[s._v("#")]),s._v(" 1）自动打包过程")]),s._v(" "),a("p",[a("code",[s._v("包装对象")]),s._v("就是只用于临时使用，使用完后会被自动销毁。在 JS 的 String、Number、Boolean 类型进行读取操作时会创建相应的包装对象。")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 字面量形式使用")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 为什么普通对象可以使用，对象.属性/方法 的操作呢？")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'wjy'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" newStr "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("charAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 上面代码的底层执行过程")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 字符串对象的存在仅用于该语句并随后销毁")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'wjy'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" temp "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建临时包装对象，此时是一个对象")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" newStr "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" temp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("charAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 调用对象方法")]),s._v("\ntemp "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 内存收回，销毁临时对象")]),s._v("\n")])])]),a("h4",{attrs:{id:"_2）立即销毁的临时对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2）立即销毁的临时对象"}},[s._v("#")]),s._v(" 2）立即销毁的临时对象")]),s._v(" "),a("p",[s._v("对于一个真的对象可以在任何时候去修改它，但是对于原始封装类型的属性，会立即消失。")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'wjy'")]),s._v("\nstr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'xxx'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// str.name === undefine")]),s._v("\n")])])]),a("p",[s._v("JS 引擎实际执行内容")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'wjy'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" temp "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\ntemp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'xxx'")]),s._v("\ntemp "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v("\n")])])]),a("p",[s._v("所以，每当我们访问 "),a("code",[s._v("str.name")]),s._v(" 时，创建的原始封装类型对象是被立即清除的。")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" temp "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\ntemp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name\ntemp "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v("\n")])])]),a("p",[s._v("同时，使用 "),a("code",[s._v("instanceof")]),s._v(" 无法判断这些类型，返回的都是 false。")]),s._v(" "),a("blockquote",[a("p",[s._v("因为临时对象仅在被读取时创建，而 "),a("code",[s._v("instanceof")]),s._v("并没有读取任何东西，也就没有任何临时对象的创建。")])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'wjy'")]),s._v("\nstr "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("instanceof")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n")])])]),a("h4",{attrs:{id:"_3）手动创建原始封装类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3）手动创建原始封装类型"}},[s._v("#")]),s._v(" 3）手动创建原始封装类型")]),s._v(" "),a("p",[s._v("这样做有一些副作用，使用 "),a("code",[s._v("typeof")]),s._v(" 得到的都是 Object 类型，就无法判断真实的原始类型。")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'wjy'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" no "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" flag "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" str "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// object")]),s._v("\n")])])]),a("p",[s._v("还有一个点，就是把对象作为判断条件，无论是否有值，都会被当做 true")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);