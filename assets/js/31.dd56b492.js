(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{234:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"鉴权方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#鉴权方式"}},[t._v("#")]),t._v(" 鉴权方式")]),t._v(" "),a("p",[t._v("https://gitbook.cn/books/5d6c7ed186f522620c0bf2b3/index.html#cookie-1")]),t._v(" "),a("h2",{attrs:{id:"session-cookie"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#session-cookie"}},[t._v("#")]),t._v(" Session-Cookie")]),t._v(" "),a("blockquote",[a("p",[t._v("这是把登录态放在服务器端存储的方式，前端存 sessionId（cookie）")]),t._v(" "),a("p",[t._v("现在有服务器集群（多台服务器），必须把信息放在持久化的地方以共享数据，如数据库DB和redis。")])]),t._v(" "),a("h3",{attrs:{id:"认证步骤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#认证步骤"}},[t._v("#")]),t._v(" 认证步骤")]),t._v(" "),a("p",[t._v("将登录信息保存在 session 中，说明是保存在服务器的。")]),t._v(" "),a("p",[t._v("在前端保存的是 cookie， 中有 session_id。访问服务器时携带这个 id。")]),t._v(" "),a("p",[t._v("服务器根据 id 知道用户是谁，然后拿出用户详细信息。")]),t._v(" "),a("p",[t._v("因为信息是写在服务器中的，所以也是安全可靠的。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/ErrorJe/ErrorJE.github.io/images/img/20200108162423.png",alt:""}})]),t._v(" "),a("ul",[a("li",[t._v("登录请求，服务器创建 session，并产生唯一 "),a("code",[t._v("seesionId")]),t._v("，并在响应中设置 "),a("code",[t._v("cookie")]),t._v(" ，属性名为 "),a("code",[t._v("jessionid")])]),t._v(" "),a("li",[t._v("客户端保存 "),a("code",[t._v("jessionid")]),t._v("，之后请求都会把这放入 "),a("code",[t._v("header")]),t._v(" 请求头中")]),t._v(" "),a("li",[t._v("服务端每次从请求头中取出 sessionId 并进行用户身份认证")])]),t._v(" "),a("h3",{attrs:{id:"存在的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#存在的问题"}},[t._v("#")]),t._v(" 存在的问题")]),t._v(" "),a("p",[t._v("用户多起来后，用上 负载均衡 + redis 解决单点失败问题，但是一旦负责 session 存储的服务器出现什么问题，所有人都需要重新登录。")]),t._v(" "),a("p",[t._v("到这里位置，cookie-session 方式很难适应现代大体量的互联网应用，特别是移动应用，想办法让用户在浏览器自己管理 sessionId，所以就有了后来的 JWT。就是无状态的认证方式。")]),t._v(" "),a("h2",{attrs:{id:"token-认证、jwt-认证"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#token-认证、jwt-认证"}},[t._v("#")]),t._v(" Token 认证、JWT 认证")]),t._v(" "),a("h3",{attrs:{id:"基本认识"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本认识"}},[t._v("#")]),t._v(" 基本认识")]),t._v(" "),a("blockquote",[a("p",[t._v("JWT（ jsonWebToken），令牌认证，原理就是 JSON")]),t._v(" "),a("p",[t._v("是目前流行的跨域身份验证解决方案")]),t._v(" "),a("p",[t._v("是在前端存储 token ，服务端校验 token")])]),t._v(" "),a("p",[t._v("通过令牌来识别身份。令牌有时效。")]),t._v(" "),a("p",[t._v("优点是部署简单。各个服务器都可以单独地去鉴权。是前后端分离架构使用的方式。")]),t._v(" "),a("p",[t._v("缺点就是，只认令牌，不认人。如果被别人拿到，就可以进行访问。")]),t._v(" "),a("h4",{attrs:{id:"jwt-和-token-解决的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jwt-和-token-解决的问题"}},[t._v("#")]),t._v(" JWT 和 Token 解决的问题")]),t._v(" "),a("ul",[a("li",[t._v("JWT 解决的是 "),a("code",[t._v("cookie-session")]),t._v(" 有前后端状态的认证问题，不是为了解决安全问题")]),t._v(" "),a("li",[t._v("JWT 适合一次性验证如右键激活（因为不需要后端存储用户和 token 中 signaure 的关系，只需要验签），Token 适合普通的 API 请求（ 需要服务端存储 Token 和用户的关系 ）")]),t._v(" "),a("li",[t._v("拦截无效请求，降低服务器处理压力；")]),t._v(" "),a("li",[t._v("实现第三方 API 授权，无需每次都输入用户名密码鉴权；")]),t._v(" "),a("li",[t._v("身份校验，防止 CSRF 攻击。")])]),t._v(" "),a("h4",{attrs:{id:"与-session-cookie-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#与-session-cookie-的区别"}},[t._v("#")]),t._v(" 与 session, cookie 的区别")]),t._v(" "),a("ul",[a("li",[t._v("ession 保存在服务端，用于客户端与服务端连接时，临时保存用户信息，当用户释放连接后，Session 将被释放；")]),t._v(" "),a("li",[t._v("Cookie 保存在客户端，当客户端发起请求时，Cookie 会附带在 http header 中，提供给服务端辨识用户身份；")]),t._v(" "),a("li",[t._v("Token 请求时提供，用于校验用户是否具备访问接口的权限")])]),t._v(" "),a("h3",{attrs:{id:"token-使用（服务器交互过程）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#token-使用（服务器交互过程）"}},[t._v("#")]),t._v(" Token 使用（服务器交互过程）")]),t._v(" "),a("blockquote",[a("p",[t._v("前端对于 token ，只能是判断有没有登录。之后就是请求时携带 token。")])]),t._v(" "),a("h4",{attrs:{id:"用户访问某页面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用户访问某页面"}},[t._v("#")]),t._v(" 用户访问某页面")]),t._v(" "),a("ul",[a("li",[t._v("客户端请求服务端")]),t._v(" "),a("li",[t._v("服务端判断是否携带令牌，没有则返回 401 状态")])]),t._v(" "),a("h4",{attrs:{id:"重定向登录页"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重定向登录页"}},[t._v("#")]),t._v(" 重定向登录页")]),t._v(" "),a("ul",[a("li",[t._v("用户操作登录，客户端请求服务端验证登录")]),t._v(" "),a("li",[t._v("服务端登录成功，给客户端签发 token 令牌")])]),t._v(" "),a("h4",{attrs:{id:"客户端缓存-token"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#客户端缓存-token"}},[t._v("#")]),t._v(" 客户端缓存 token")]),t._v(" "),a("ul",[a("li",[t._v("前端一般存到 "),a("code",[t._v("sessionStorage")])]),t._v(" "),a("li",[t._v("之后每次请求服务器，都要携带 token\n"),a("ul",[a("li",[t._v("一般是放于 header 请求头中")])])]),t._v(" "),a("li",[t._v("服务器验证 token，验证后返回数据\n"),a("ul",[a("li",[t._v("是否存在")]),t._v(" "),a("li",[t._v("是否正确")]),t._v(" "),a("li",[t._v("是否过期")])])])]),t._v(" "),a("h3",{attrs:{id:"bearer-token-规范（前端部分）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bearer-token-规范（前端部分）"}},[t._v("#")]),t._v(" Bearer Token 规范（前端部分）")]),t._v(" "),a("blockquote",[a("p",[t._v("在用 HTTP 访问 OAuth2 保护资源时如何使用令牌的一个规范")])]),t._v(" "),a("ul",[a("li",[t._v("特点：令牌就是身份证明，无需证明令牌的所有权")]),t._v(" "),a("li",[t._v("具体规定和实现：在请求头中定义 "),a("code",[t._v("Authorization")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 固定字符串 Bearer（后有一个空格）")]),t._v("\nAuthorization"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Bearer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("token"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("用这种规范实际应用的代码")]),t._v(" "),a("blockquote",[a("p",[t._v("这样使用后，不管后台使用什么语言。只要按照这个规范都能正确解析出 token")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("token"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("headers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Authorization "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Bearer '")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" token \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"jwt-规范（后端部分规范）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jwt-规范（后端部分规范）"}},[t._v("#")]),t._v(" JWT 规范（后端部分规范）")]),t._v(" "),a("blockquote",[a("p",[t._v("令牌具体定义方式。jwt.io 这个网站可以去看 Token 的解析。")])]),t._v(" "),a("h4",{attrs:{id:"令牌的组成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#令牌的组成"}},[t._v("#")]),t._v(" 令牌的组成")]),t._v(" "),a("p",[t._v("我们看到的 "),a("code",[t._v("token")]),t._v(" 字符串实际上是有 3 部分组成的。类似 "),a("code",[t._v("adfafdsfsadf.dfdswerwe.sfsxsdf3")])]),t._v(" "),a("ul",[a("li",[t._v("令牌的组成：头 + 载荷 + 签名\n"),a("ul",[a("li",[t._v("这些虽然经过加密，但都是明文。所以不能用于传递敏感信息")]),t._v(" "),a("li",[t._v("载荷信息是能被反解的，但是秘钥是无法拿出来的")])])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("Header"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Payload"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Signature\n")])])]),a("ul",[a("li",[t._v("Header 含加密算法，令牌类型等信息")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"alg"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"HS256"')]),t._v("， "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 标记签名的算法")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"typ"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"JWT"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[t._v("Payload 载荷: 虽然用了 Base64 转换，但是可以转换回来，所以不要放隐私数据。一般会包含用户信息， 签发时间和过期时间等信息")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sub"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1234567890"')]),t._v("， "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  payload 这里是存我们的方存放的用户信息")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"John Doe"')]),t._v("，\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"admin"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("，\n  exp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" number "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 过期时间")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[t._v("Signature 签名：根据头、载荷及服务端秘钥加密得到的哈希串\n"),a("ul",[a("li",[t._v("默认算法：Hmac Sha1 256")]),t._v(" "),a("li",[t._v("会把这3个组成经过加密成一个 32 位的字符串。保证前端无法预测")])])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" signature "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HMACSHA256")]),t._v("（\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("base64UrlEncode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("header"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"."')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("base64UrlEncode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("payload"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"."')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("secret"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nres"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("signature"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" signature"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h4",{attrs:{id:"具体实现（koa实现）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#具体实现（koa实现）"}},[t._v("#")]),t._v(" 具体实现（koa实现）")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 服务端 -/server/server.js")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Koa "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'koa'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Router "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'koa-router'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 生成和验证令牌的模块")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" jwt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'jsonwebtoken'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" jwtAuth "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'koa-jwt'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 服务端秘钥, 这个秘钥的生成规则不同。可能是根据密码之类的东西二次加密")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" secret "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'it'")]),t._v("s a secret' \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" app "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Koa")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" router "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Router")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 登录接口")]),t._v("\nrouter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/api/login'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("ctx")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("username"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" passwd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("query\n  \n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("username "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'wjy'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" passwd "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'123'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 账号密码验证成功， 生成令牌（三部分构成）")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" token "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" jwt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sign")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    \t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'wjy'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用户信息数据")]),t._v("\n        exp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("floor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 过期时间")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      secret\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("code"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("token"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 登录失败")]),t._v("\n    ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("status "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("401")]),t._v("\n    ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("code"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" message"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'用户名或密码错误'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 受保护的路由")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 因为前端的东西不可信，所以都是要后端来做验证")]),t._v("\nrouter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/api/userinfo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("jwtAuth")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("secret"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 验证 token 有效性")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回用户信息")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("ctx")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("code"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'jerry'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\napp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("router"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("routes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\napp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h4",{attrs:{id:"解决跨域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决跨域"}},[t._v("#")]),t._v(" 解决跨域")]),t._v(" "),a("blockquote",[a("p",[t._v("因为上面的 koa 服务开启的是 3000 端口，前端假设是 8000 端口。那么就跨域了。")]),t._v(" "),a("p",[t._v("去 vue.config.js 中配置代理服务器")]),t._v(" "),a("p",[t._v("如果是 mock 服务器的话，也是在 "),a("code",[t._v("devServer")]),t._v("中写中间件。现在是“真”的服务器，所以用 proxy 就行了")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// vue.config.js")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n  devServer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 代理配置。前端访问 "/api" 时就转发到 target 的地址上去')]),t._v("\n    proxy"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/api'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        target"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://127.0.0.1:3000/'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t\tchangeOrigin"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// mock 服务。before(app) {...}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"安全性控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安全性控制"}},[t._v("#")]),t._v(" 安全性控制")]),t._v(" "),a("ul",[a("li",[t._v("缩短 Token 有效时间")]),t._v(" "),a("li",[t._v("secret 定时替换")]),t._v(" "),a("li",[t._v("使用 HTTPS 加密协议")]),t._v(" "),a("li",[t._v("对标准字段 iss、sub、aud、nbf、exp 进行校验")])]),t._v(" "),a("h2",{attrs:{id:"oauth2-0-开放授权"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#oauth2-0-开放授权"}},[t._v("#")]),t._v(" OAuth2.0 开放授权")]),t._v(" "),a("blockquote",[a("p",[t._v("跳到第三方页面进行登录、授权再回来")]),t._v(" "),a("p",[t._v("推荐文章，阮一峰老师的： "),a("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2014/05/oauth_2_0.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://www.ruanyifeng.com/blog/2014/05/oauth_2_0.html"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("根据描述， Oauth2 有4种授权方式")]),t._v(" "),a("p",[t._v("​\t授权码模式（主流使用，最完整严格），简化模式，密码模式，客户端模式")]),t._v(" "),a("p",[t._v("客户端必须得到用户的授权，才能获得令牌")])]),t._v(" "),a("p",[t._v("我们不再需要在每个平台上注册，通过 oauth 可以从原来的平台（github，qq, 163等）拿到一些自己的用户信息，授权给某个平台使用。")]),t._v(" "),a("h3",{attrs:{id:"鉴权流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#鉴权流程"}},[t._v("#")]),t._v(" 鉴权流程")]),t._v(" "),a("p",[t._v("要在第三方平台配置3个东西")]),t._v(" "),a("ul",[a("li",[t._v("client_id 标识")]),t._v(" "),a("li",[t._v("client_secret 密钥")]),t._v(" "),a("li",[t._v("redirect_uri 登录授权后重定向的地址")])]),t._v(" "),a("p",[t._v("用户操作登录后，后端拿到3个字段再拼接成地址，然后给第三方进行校验，第三方回调 "),a("code",[t._v("redirect_uri")]),t._v(" 并跟着 "),a("code",[t._v("token")])]),t._v(" "),a("ul",[a("li",[t._v("token")]),t._v(" "),a("li",[t._v("clinet_secret")])]),t._v(" "),a("p",[t._v("去第三方获取 "),a("code",[t._v("accessToken")]),t._v("，然后凭这个就可以在第三方调用 API 获取用户信息，放入 cookie")]),t._v(" "),a("h3",{attrs:{id:"访问的流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#访问的流程"}},[t._v("#")]),t._v(" 访问的流程")]),t._v(" "),a("ul",[a("li",[t._v("用户访问客户端，后者将前者导向认证服务器（微信服务器）")]),t._v(" "),a("li",[t._v("用户选择是否给予客户端授权")]),t._v(" "),a("li",[t._v("若用户给予授权，认证服务器将向客户端指定“重定向URL”。同时给予授权码")]),t._v(" "),a("li",[t._v("客户端收到授权码，附上“重定向URL”，并向认证服务器申请令牌。该步骤在后台服务器上完成，对用户不可见")]),t._v(" "),a("li",[t._v("认证服务器核对授权码和重定向URL。无误后，向客户端发送访问令牌和更新令牌。")])]),t._v(" "),a("blockquote",[a("p",[t._v("对于微信公众号来说，获取用户信息，就是相当于普通网页的用户登录")])]),t._v(" "),a("ul",[a("li",[t._v("生成认证URL， 跳转微信认证服务， 回调服务端获取code，调用微信接口accessToken和openid，调用服务端接口")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/ErrorJe/ErrorJE.github.io/images/img/20200109095453.png",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"ss0-单点登录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ss0-单点登录"}},[t._v("#")]),t._v(" SS0 单点登录")]),t._v(" "),a("blockquote",[a("p",[t._v("在多个应用系统中，只要登录一次，就可以访问其他相互信任的应用系统")])]),t._v(" "),a("h3",{attrs:{id:"同一级域名下处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#同一级域名下处理"}},[t._v("#")]),t._v(" 同一级域名下处理")]),t._v(" "),a("p",[t._v("假设父级域名是 "),a("code",[t._v("a.com")]),t._v(" 那么下面所有的域名都可以拿到 cookie")]),t._v(" "),a("ul",[a("li",[t._v("1.a.com")]),t._v(" "),a("li",[t._v("2.a.com")]),t._v(" "),a("li",[t._v("3.a.com")])]),t._v(" "),a("p",[t._v("这样就解决了三个系统之间传递信息了，把用户登录态放在 "),a("code",[t._v("a.com")]),t._v(" 的 cookie 中就行（就是设置这个 cookie 的 "),a("code",[t._v("Domain")]),t._v(" 属性）")]),t._v(" "),a("p",[t._v("再搭配一个共享 "),a("code",[t._v("session")]),t._v(" 池的服务器，完成单点登录（大多数公司内部系统的通信方式）。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/ErrorJe/ErrorJE.github.io/images/img/20200109110632.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"多系统登录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多系统登录"}},[t._v("#")]),t._v(" 多系统登录")]),t._v(" "),a("ul",[a("li",[t._v("同域名：cookie 共享，单服务或多服务没有区别")]),t._v(" "),a("li",[t._v("不同子域名：子级之间不共享，但可以拿到父级 cookie，所以可以设置在父级域名上")]),t._v(" "),a("li",[t._v("完全不同域名：不同域名下无法共享 cookie")])]),t._v(" "),a("h3",{attrs:{id:"跨域-cors"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#跨域-cors"}},[t._v("#")]),t._v(" 跨域 CORS")]),t._v(" "),a("p",[t._v("要后端接口支持 "),a("code",[t._v("CORS")]),t._v(" 访问，且浏览器为了安全，不允许 "),a("code",[t._v("withCredentials")]),t._v(" 配置 "),a("code",[t._v("*")]),t._v(" 符号，所以要明确设置可访问的域名名单。")]),t._v(" "),a("p",[t._v("也可以通过访问的 "),a("code",[t._v("Referrer")]),t._v(" 解析请求来源域名，作为可访问名单。但是这样不够安全。")]),t._v(" "),a("h3",{attrs:{id:"单点登录-cas"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单点登录-cas"}},[t._v("#")]),t._v(" 单点登录 CAS")]),t._v(" "),a("p",[t._v("就是采用"),a("code",[t._v("通用session")]),t._v(" 的方式登录多个完全不同域的系统。只需要在某个系统下验证后，就可以拿到 session，然后就可以访问所有系统")]),t._v(" "),a("h2",{attrs:{id:"ldap-认证"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ldap-认证"}},[t._v("#")]),t._v(" LDAP 认证")]),t._v(" "),a("blockquote",[a("p",[t._v("轻量目录访问协议，这个协议是基于 TCP/IP 的，意思是它的数据存储是基于目录文件的。")])]),t._v(" "),a("p",[t._v("就是很多的系统，每次都要登录，但是登录的账号密码都是一样的。")]),t._v(" "),a("p",[t._v("跟 "),a("code",[t._v("sso")]),t._v("  的区别在于 sso 是到专门的一个页面去登录，"),a("code",[t._v("LDAP")]),t._v(" 需要每次都进行登录。")]),t._v(" "),a("h2",{attrs:{id:"扫码登录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#扫码登录"}},[t._v("#")]),t._v(" 扫码登录")]),t._v(" "),a("blockquote",[a("p",[t._v("二维码的本质就是一个 URL")])]),t._v(" "),a("p",[t._v("生成二维码的同时会提供一个 "),a("code",[t._v("uuid")]),t._v(" 到 URL 上，比如")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("http"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("www"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("uuid"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("xxxxx\n")])])]),a("p",[t._v("当手机扫码后，会带上 "),a("code",[t._v("uuid")]),t._v(" 和 "),a("code",[t._v("用户信息")]),t._v("。后端解析后就知道用户登录进来的，二维码页面跳转到某个页面。")]),t._v(" "),a("p",[t._v("我们利用 "),a("code",[t._v("qrcode.js")]),t._v(" 这个库完成二维码的生成")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1 引入 qrcode.js")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2 创建二维码实例")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("QRCode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#id'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'url'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3 做一个 setInterval 轮询，获取后端是否知道用户已经登录")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("isLogin")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  axios"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"users/isLogin"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("res")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 判断是否登录")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("islogin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#qrcode"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("display"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"none"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"登陆成功!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 跳转到其他页面之类的")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 清理定时器")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("clearInterval")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("interval"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" interval "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setInterval")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("isLogin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 轮询是否登录")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);