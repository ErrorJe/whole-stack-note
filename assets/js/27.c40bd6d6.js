(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{246:function(t,s,v){"use strict";v.r(s);var _=v(0),a=Object(_.a)({},(function(){var t=this,s=t.$createElement,v=t._self._c||s;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"typescript-基础"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#typescript-基础"}},[t._v("#")]),t._v(" TypeScript 基础")]),t._v(" "),v("h2",{attrs:{id:"typescript-简介"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#typescript-简介"}},[t._v("#")]),t._v(" TypeScript  简介")]),t._v(" "),v("h3",{attrs:{id:"基本认识"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#基本认识"}},[t._v("#")]),t._v(" 基本认识")]),t._v(" "),v("blockquote",[v("p",[t._v("（ts，微软搞的）")]),t._v(" "),v("p",[t._v("微软特别喜欢开发一些语言。TS是JS的超集。")]),t._v(" "),v("p",[t._v("在任何环境下不能直接运行，必须是编译成JS后才能被执行。——跑起来的是JS。")])]),t._v(" "),v("h3",{attrs:{id:"typescript-特点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#typescript-特点"}},[t._v("#")]),t._v(" TypeScript 特点")]),t._v(" "),v("h4",{attrs:{id:"背景"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[t._v("#")]),t._v(" 背景")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("首先要提到JS，JS连数据类型都不支持，比较不规范。")])]),t._v(" "),v("li",[v("p",[t._v("微软视图取代JS的使用。")])])]),t._v(" "),v("h4",{attrs:{id:"好处"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#好处"}},[t._v("#")]),t._v(" 好处")]),t._v(" "),v("ul",[v("li",[t._v("补充JS没有的特性，如类型、抽象和接口")]),t._v(" "),v("li",[t._v("语法更加严谨")]),t._v(" "),v("li",[t._v("兼容JS的所有语法，学习曲线比较平缓——作为JS的超集")])]),t._v(" "),v("h4",{attrs:{id:"主要语法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#主要语法"}},[t._v("#")]),t._v(" 主要语法")]),t._v(" "),v("ul",[v("li",[t._v("数据类型：变量，参数，返回值")]),t._v(" "),v("li",[t._v("类：新的写法")]),t._v(" "),v("li",[t._v("高级特性：抽象， 接口")])]),t._v(" "),v("h4",{attrs:{id:"是-js-的超集"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#是-js-的超集"}},[t._v("#")]),t._v(" 是 JS 的超集")]),t._v(" "),v("ul",[v("li",[t._v("直接写 JS 完全没问题，是一个超集")]),t._v(" "),v("li",[t._v("类型注解和编译时类型检查")]),t._v(" "),v("li",[t._v("基于类的面向对象编程")]),t._v(" "),v("li",[t._v("泛型")]),t._v(" "),v("li",[t._v("接口")]),t._v(" "),v("li",[t._v("声明文件")])]),t._v(" "),v("h2",{attrs:{id:"安装-ts和编译"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#安装-ts和编译"}},[t._v("#")]),t._v(" 安装 TS和编译")]),t._v(" "),v("h3",{attrs:{id:"安装ts编译器（node环境）"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#安装ts编译器（node环境）"}},[t._v("#")]),t._v(" 安装TS编译器（node环境）")]),t._v(" "),v("blockquote",[v("p",[v("code",[t._v("npm i typescript -g")]),t._v("安装后就可以直接使用")]),t._v(" "),v("p",[t._v("如果是用VSCODE和itom等编辑的话，可以下载相应的插件。")])]),t._v(" "),v("h3",{attrs:{id:"ts手动编译"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#ts手动编译"}},[t._v("#")]),t._v(" TS手动编译")]),t._v(" "),v("p",[t._v("typrscript的文件后缀是"),v("code",[t._v(".ts")]),t._v("，当然是无法直接运行的，首先就需要将其编译成"),v("code",[t._v(".js")]),t._v("文件，这样在node环境和浏览器环境中才可以被正常执行。")]),t._v(" "),v("blockquote",[v("p",[t._v("当npm安装好ts后，在命令行输入"),v("code",[t._v("tsc xxx.ts")]),t._v("就可以编译成js文件。")]),t._v(" "),v("p",[t._v("输出结果就是一个js文件，当然原先的ts文件也会保留下来。")])]),t._v(" "),v("div",{staticClass:"language-shell extra-class"},[v("pre",{pre:!0,attrs:{class:"language-shell"}},[v("code",[t._v("tcs index.ts\n")])])]),v("blockquote",[v("p",[t._v("tcs命令也是一个功能模块，会随着ts的安装自动携带")])]),t._v(" "),v("h3",{attrs:{id:"ts自动编译"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#ts自动编译"}},[t._v("#")]),t._v(" TS自动编译")]),t._v(" "),v("p",[t._v("使用编辑工具vsvode时，就可以通过配置来自动编译ts。")]),t._v(" "),v("p",[t._v("假设，我们现在新建了一个专门测试TS的文件夹（理解成项目文件夹）")]),t._v(" "),v("p",[v("code",[t._v("./typescript")]),t._v("文件夹， 然后新建一个TS文件， "),v("code",[t._v("./typescript/index.ts")])]),t._v(" "),v("p",[t._v("打开命令行，输入"),v("code",[t._v("tsc --init")]),t._v("，然后就会在当前目录生成一个配置文件"),v("code",[t._v("tsconfig.json")])]),t._v(" "),v("blockquote",[v("p",[t._v("该文件的配置项，大部分被注释，默认只有少数几个是生效的，具体在以后用到了，可去官网文档学习。")]),t._v(" "),v("p",[t._v("其中，"),v("code",[t._v("outDir")]),t._v("属性是默认注释的，是表示TS被编译成JS后存放的文件路径，如果不设置的话，默认是当前路径。这样的话可能会和其他文件混在一起。")]),t._v(" "),v("p",[t._v("所以，一般的做法是配置一个"),v("code",[t._v("./js")]),t._v("文件夹路径，然后是生成的js文件都统一放在其中。")])]),t._v(" "),v("div",{staticClass:"language-js extra-class"},[v("pre",{pre:!0,attrs:{class:"language-js"}},[v("code",[v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"outDir"')]),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./js"')]),t._v("\n")])])]),v("p",[t._v("当配置完这个文件后，还需要对配置文件进行监视。")]),t._v(" "),v("blockquote",[v("p",[t._v("在vscode中快捷键， ctrl+shift+b， 选中监视xxxxxx")])]),t._v(" "),v("p",[t._v("之后在保存"),v("code",[t._v("ts")]),t._v("文件的时候，会自动进行编译并生成JS文件保存在指定的地方。")]),t._v(" "),v("h2",{attrs:{id:"执行ts"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#执行ts"}},[t._v("#")]),t._v(" 执行TS")]),t._v(" "),v("p",[t._v("虽然会被编译成JS，如果直接去"),v("code",[t._v("node xx.js")]),t._v("的话，是不会有TS特性的报错的。")]),t._v(" "),v("p",[t._v("所以无论是否被编译成js，执行的时候要执行"),v("code",[t._v("tsc xxx.ts")]),t._v("这样才会报错和类型检查。")]),t._v(" "),v("p",[t._v("检查后确定编译通过再去执行JS。")]),t._v(" "),v("blockquote",[v("p",[t._v("TS语言，在书写编写代码的时候，就已经会报错了。")])])])}),[],!1,null,null,null);s.default=a.exports}}]);