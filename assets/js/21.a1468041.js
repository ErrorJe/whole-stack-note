(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{240:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"异步基础知识"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异步基础知识"}},[t._v("#")]),t._v(" 异步基础知识")]),t._v(" "),s("h2",{attrs:{id:"基本概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[t._v("#")]),t._v(" 基本概念")]),t._v(" "),s("p",[t._v("在发起请求时，我们很多时候会用到异步， 如 "),s("code",[t._v("AJAX")]),t._v(" 请求。")]),t._v(" "),s("p",[t._v("在学习的时候我们经常使用 "),s("code",[t._v("setTimeout")]),t._v(" 来模拟延时的异步操作。当然它也是一个异步函数，就算延时时间是 "),s("code",[t._v("0(最少默认是 4ms)")]),t._v("，也是异步的")]),t._v(" "),s("h2",{attrs:{id:"异步和同步的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异步和同步的区别"}},[t._v("#")]),t._v(" 异步和同步的区别")]),t._v(" "),s("p",[t._v("假设 "),s("code",[t._v("pro")]),t._v(" 是同步方法")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这3个方法会按照顺序执行")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("por1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("por2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("por3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("假设 "),s("code",[t._v("ajax")]),t._v(" 是异步方法")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这3个方法的执行顺序是不一定的，因为是异步的操作")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ajax1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ajax2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ajax3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"异步带来的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异步带来的问题"}},[t._v("#")]),t._v(" 异步带来的问题")]),t._v(" "),s("h3",{attrs:{id:"无法同步取值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#无法同步取值"}},[t._v("#")]),t._v(" 无法同步取值")]),t._v(" "),s("blockquote",[s("p",[t._v("多个异步操作的执行顺序是不定的。那么就无法用同步的方式去获取值")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这种方式是获取不到值的，因为当执行到这步的时候，ajax()还没有执行完")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等ajax执行完了，这步早就走完了，那么变量 data 自然就没有值。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ajax")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"无法动态渲染-dom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#无法动态渲染-dom"}},[t._v("#")]),t._v(" 无法动态渲染 DOM")]),t._v(" "),s("blockquote",[s("p",[t._v("在用到一些框架时，用 ajax 方式请求数据，赋值后想要更新 DOM 视图。但是你不知道 DOM 到底什么时候渲染的")])]),t._v(" "),s("h4",{attrs:{id:"方法在-dom-渲染之前"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法在-dom-渲染之前"}},[t._v("#")]),t._v(" 方法在 DOM 渲染之前")]),t._v(" "),s("p",[t._v("那这一般来说就是操作数据，而请求数据的方式中很多情况下就是异步请求。—— "),s("code",[t._v("onLoad")]),t._v(" 钩子函数z")]),t._v(" "),s("ul",[s("li",[t._v("这种情况下，我们需要在多个函数之间传递获取的数据该怎么办呢？解决方案之一就是使用回调函数")]),t._v(" "),s("li",[t._v("我们只能在异步请求回调中去使用数据")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 请求方法")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("http")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("url "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 请求成功时的回调")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("success")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("res")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 事先定义好回调函数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("callback")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里能够使用到我们的数据")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"方法在-dom-渲染之后"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法在-dom-渲染之后"}},[t._v("#")]),t._v(" 方法在 DOM 渲染之后")]),t._v(" "),s("p",[t._v("这一般来说就是往已经存在的 DOM 上去填充数据。——"),s("code",[t._v("onReady")]),t._v(" 钩子函数")]),t._v(" "),s("ul",[s("li",[t._v("这种情况下，我们需要提前声明一些 DOM 需要用到的变量。即使是空的。")]),t._v(" "),s("li",[t._v("在异步的情况下，DOM 先行渲染完毕，要用到变量时，却发现没有，会报错。如果我们事先提供了这些数据，然后DOM就会先用上这些数据。")]),t._v(" "),s("li",[t._v("最后，在异步执行完毕后，我们会使用框架的数据绑定，去响应这些DOM上的变量，从而展示出数据")])])])}),[],!1,null,null,null);a.default=e.exports}}]);